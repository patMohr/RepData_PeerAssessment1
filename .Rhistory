group_by(interval) %>%
summarise(steps=sum(steps))
avgStepsPerInterval$times=seq(as.POSIXct("00:00", format = "%H:%M"), length = 288, by = 300)
ggplot(data=avgStepsPerInterval, aes(x=times, y=steps)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M"))
maxInterval=avgStepsPerInterval[avgStepsPerInterval$steps==max(avgStepsPerInterval$steps),"times"]
format(maxInterval, "%H:%M")
as.character(format(maxInterval, "%H:%M"))
ggplot(data=avgStepsPerInterval, aes(x=times, y=steps)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
avgStepsPerInterval$times=seq(as.POSIXct("00:00", format = "%H:%M"), length = 288, by = 300)
ggplot(data=avgStepsPerInterval, aes(x=times, y=steps)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +  labs(title = "Average Steps Per 5 Minute Interval") + theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
install.packages("extrafont");library(extrafont)
font_import()
setwd("/Users/patm12/documents/git/RepData_PeerAssessment1")
fit=read.csv("activity.csv",stringsAsFactors=F)
totalStepsPerDay=fitDeleteNA %>%
group_by(date) %>%
summarise(steps=sum(steps,na.rm=T))
h <- ggplot(totalStepsPerDay, aes(x=steps))
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
avgSteps=mean(totalStepsPerDay$steps)
medianSteps=median(totalStepsPerDay$steps)
avgStepsPerInterval=fitDeleteNA %>%
group_by(interval) %>%
summarise(steps=sum(steps,na.rm=T))
avgStepsPerInterval$times=seq(as.POSIXct("00:00", format = "%H:%M"), length = 288, by = 300)
ggplot(data=avgStepsPerInterval, aes(x=times, y=steps)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +  labs(title = "Average Steps at Times Throughout the Day") + theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
setwd("/Users/patm12/documents/git/RepData_PeerAssessment1")
fit=read.csv("activity.csv",stringsAsFactors=F)
totalStepsPerDay=fit %>%
group_by(date) %>%
summarise(steps=sum(steps,na.rm=T))
h <- ggplot(totalStepsPerDay, aes(x=steps))
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
totalStepsPerDay=fit %>%
filter(steps=all(!is.na(steps)))
group_by(date) %>%
summarise(steps=sum(steps,na.rm=T))
h <- ggplot(totalStepsPerDay, aes(x=steps))
totalStepsPerDay=fit %>%
filter(steps=all(!is.na(steps)))
group_by(date) %>%
summarise(steps=sum(steps,na.rm=T))
totalStepsPerDay=fit %>%
group_by(date) %>%
filter(steps=all(!is.na(steps)))
summarise(steps=sum(steps,na.rm=T))
totalStepsPerDay=fit %>%
filter(steps=all(!is.na(steps))) %>%
group_by(date) %>%
summarise(steps=sum(steps,na.rm=T))
totalStepsPerDay=fit %>%
group_by(date) %>%
summarise(steps=sum(steps,na.rm=T))
fitDeleteNA=fit[!is.na(fit$steps),]
totalStepsPerDay=fitDeleteNA %>%
group_by(date) %>%
summarise(steps=sum(steps=T))
h <- ggplot(totalStepsPerDay, aes(x=steps))
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
fit=read.csv("activity.csv",stringsAsFactors=F)
#remove NAs
dim(fit)
fitDeleteNA=fit[!is.na(fit$steps),]
dim(fitDeleteNA)
totalStepsPerDay=fitDeleteNA %>%
group_by(date) %>%
totalStepsPerDay=fitDeleteNA %>%
group_by(date) %>%
summarise(steps=sum(steps))
h <- ggplot(totalStepsPerDay, aes(x=steps))
h + geom_histogram(aes(fill = ..count..)) +
totalStepsPerDay=fitDeleteNA %>%
group_by(date) %>%
summarise(steps=sum(steps))
totalStepsPerDay=fitDeleteNA %>%
group_by(date) %>%
summarise(steps=sum(steps))
h <- ggplot(totalStepsPerDay, aes(x=steps))
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
avgSteps=mean(totalStepsPerDay$steps)
medianSteps=median(totalStepsPerDay$steps)
avgStepsPerInterval=fitDeleteNA %>%
group_by(interval) %>%
summarise(steps=sum(steps))
avgStepsPerInterval$times=seq(as.POSIXct("00:00", format = "%H:%M"), length = 288, by = 300)
ggplot(data=avgStepsPerInterval, aes(x=times, y=steps)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +  labs(title = "Average Steps at Times Throughout the Day") + theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
#with base plot
#plot(avgStepsPerInterval$times,avgStepsPerInterval$steps,type="l",xlab="Time Interval",ylab="Avg Steps")
maxInterval=avgStepsPerInterval[avgStepsPerInterval$steps==max(avgStepsPerInterval$steps),"times"]
as.character(format(maxInterval, "%H:%M"))
#calculate the number of missing measurements
length(fit$steps[is.na(fit$steps)])
avgStepsPerInterval=fitDeleteNA %>%
group_by(interval) %>%
summarise(AvgSteps=sum(steps))
avgStepsPerInterval$times=seq(as.POSIXct("00:00", format = "%H:%M"), length = 288, by = 300)
ggplot(data=avgStepsPerInterval, aes(x=times, y=Avgsteps)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +  labs(title = "Average Steps at Times Throughout the Day") + theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
avgStepsPerInterval=fitDeleteNA %>%
group_by(interval) %>%
summarise(AvgSteps=sum(steps))
avgStepsPerInterval$times=seq(as.POSIXct("00:00", format = "%H:%M"), length = 288, by = 300)
avgStepsPerInterval
avgStepsPerInterval
ggplot(data=avgStepsPerInterval, aes(x=times, y=Avgsteps)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +  labs(title = "Average Steps at Times Throughout the Day") + theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
avgStepsPerInterval=fitDeleteNA %>%
group_by(interval) %>%
summarise(steps=sum(steps))
avgStepsPerInterval$times=seq(as.POSIXct("00:00", format = "%H:%M"), length = 288, by = 300)
ggplot(data=avgStepsPerInterval, aes(x=times, y=steps)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +  labs(title = "Average Steps at Times Throughout the Day") + theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
fit$steps2=ifelse(is.na(fit$steps),avgStepsPerInterval$steps[which(avgStepsPerInterval$interval==fit$interval)],fit$steps)
head(ft)
head(fit)
fit[1000]
fit[1000,]
fit[1000:1050,]
head(fit)
head(avgStepsPerInterval)
fit=read.csv("activity.csv",stringsAsFactors=F)
#remove NAs
fitDeleteNA=fit[!is.na(fit$steps),]
totalStepsPerDay=fitDeleteNA %>%
group_by(date) %>%
summarise(steps=sum(steps))
h <- ggplot(totalStepsPerDay, aes(x=steps))
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
avgSteps=mean(totalStepsPerDay$steps)
medianSteps=median(totalStepsPerDay$steps)
avgStepsPerInterval=fitDeleteNA %>%
group_by(interval) %>%
summarise(steps=sum(steps))
avgStepsPerInterval$times=seq(as.POSIXct("00:00", format = "%H:%M"), length = 288, by = 300)
ggplot(data=avgStepsPerInterval, aes(x=times, y=steps)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +  labs(title = "Average Steps at Times Throughout the Day") + theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
#with base plot
#plot(avgStepsPerInterval$times,avgStepsPerInterval$steps,type="l",xlab="Time Interval",ylab="Avg Steps")
maxInterval=avgStepsPerInterval[avgStepsPerInterval$steps==max(avgStepsPerInterval$steps),"times"]
as.character(format(maxInterval, "%H:%M"))
#calculate the number of missing measurements
length(fit$steps[is.na(fit$steps)])
#replace NA with average for that interval
fit2=fit
fit2$steps=ifelse(is.na(fit$steps2),avgStepsPerInterval$steps[which(avgStepsPerInterval$interval==fit2$interval)],fit2$steps)
fit2$steps=ifelse(is.na(fit2$steps),avgStepsPerInterval$steps[which(avgStepsPerInterval$interval==fit2$interval)],fit2$steps)
head(fit2)
totalStepsPerDay2=fit2 %>%
group_by(date) %>%
summarise(steps=sum(steps))
h <- ggplot(totalStepsPerDay2, aes(x=steps))
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
fit2=fit
fit2$steps=ifelse(is.na(fit2$steps),avgStepsPerInterval$steps[which(avgStepsPerInterval$interval==fit2$interval)],fit2$steps)
totalStepsPerDay2=fit2 %>%
group_by(date) %>%
summarise(steps=sum(steps))
h <- ggplot(totalStepsPerDay2, aes(x=steps))
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
totalStepsPerDay2
head(fit2)
length(fit2$interval[is.na(fit2$interval)])
length(fit2$steps[is.na(fit2$steps)])
dim(fit2)
head(fit2[is.na(fit2$steps),])
avgStepsPerInterval=fitDeleteNA %>%
group_by(interval) %>%
summarise(Avgsteps=sum(steps))
avgStepsPerInterval
avgStepsPerInterval$times=seq(as.POSIXct("00:00", format = "%H:%M"), length = 288, by = 300)
ggplot(data=avgStepsPerInterval, aes(x=times, y=steps)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +  labs(title = "Average Steps at Times Throughout the Day") + theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
avgStepsPerInterval=fitDeleteNA %>%
group_by(interval) %>%
summarise(avgSteps=sum(steps))
avgStepsPerInterval$times=seq(as.POSIXct("00:00", format = "%H:%M"), length = 288, by = 300)
ggplot(data=avgStepsPerInterval, aes(x=times, y=avgSteps)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +  labs(title = "Average Steps at Times Throughout the Day") + theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
head(avgStepsPerInterval)
fit2=merge(fit,avgStepsPerInterval[,c("interval","avgSteps")],all.x=T)
fit2$steps=ifelse(is.na(fit2$steps),fit2$avgSteps,fit2$steps)
totalStepsPerDay2=fit2 %>%
group_by(date) %>%
summarise(steps=sum(steps))
h <- ggplot(totalStepsPerDay2, aes(x=steps))
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
totalStepsPerDay2
h <- ggplot(totalStepsPerDay2, aes(x=steps))
h
h + geom_histogram(aes(fill = ..count..))
totalStepsPerDay2
setwd("/Users/patm12/documents/git/RepData_PeerAssessment1")
fit=read.csv("activity.csv",stringsAsFactors=F)
fit2=merge(fit,avgStepsPerInterval[,c("interval","avgSteps")],all.x=T)
fit2$steps=ifelse(is.na(fit2$steps),fit2$avgSteps,fit2$steps)
totalStepsPerDay2=fit2 %>%
group_by(date) %>%
summarise(steps=sum(steps))
h <- ggplot(totalStepsPerDay2, aes(x=steps))
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
h <- ggplot(totalStepsPerDay2, aes(x=steps))
h + geom_histogram(aes(fill = ..count..),binwidth = 3) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
h <- ggplot(totalStepsPerDay2, aes(x=steps),binwidth = 10)
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
h <- ggplot(totalStepsPerDay2, aes(x=steps),binwidth = 3)
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
h <- ggplot(totalStepsPerDay2, aes(x=steps),binwidth = 20)
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
totalStepsPerDay=fitDeleteNA %>%
group_by(date) %>%
summarise(steps=sum(steps))
h <- ggplot(totalStepsPerDay, aes(x=steps))
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
fit2=merge(fit,avgStepsPerInterval[,c("interval","avgSteps")],all.x=T)
head(fit2)
totalStepsPerDay=fitDeleteNA %>%
group_by(date) %>%
summarise(steps=sum(steps))
totalStepsPerDay
totalStepsPerDay2=fit2 %>%
group_by(date) %>%
summarise(steps=sum(steps))
totalStepsPerDay2
fit2=merge(fit,avgStepsPerInterval[,c("interval","avgSteps")],all.x=T)
head(fit2[is.na(fit2$avgSteps),])
head(fit2[is.na(fit2$steps),])
fit2$steps=ifelse(is.na(fit2$steps),fit2$avgSteps,fit2$steps)
head(fit2[is.na(fit2$steps),])
totalStepsPerDay2=fit2 %>%
group_by(date) %>%
summarise(steps=sum(steps))
totalStepsPerDay2
totalStepsPerDay2[totalStepsPerDay2$date=="2012-10-01",]
fit2[fit2$date=="2012-10-01",]
sum(fit2[fit2$date=="2012-10-01","steps"])
avgStepsPerInterval=fitDeleteNA %>%
group_by(interval) %>%
summarise(avgSteps=mean(steps))
avgStepsPerInterval$times=seq(as.POSIXct("00:00", format = "%H:%M"), length = 288, by = 300)
ggplot(data=avgStepsPerInterval, aes(x=times, y=avgSteps)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +  labs(title = "Average Steps at Times Throughout the Day") + theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
#with base plot
#plot(avgStepsPerInterval$times,avgStepsPerInterval$steps,type="l",xlab="Time Interval",ylab="Avg Steps")
maxInterval=avgStepsPerInterval[avgStepsPerInterval$steps==max(avgStepsPerInterval$steps),"times"]
as.character(format(maxInterval, "%H:%M"))
maxInterval=avgStepsPerInterval[avgStepsPerInterval$avgSteps==max(avgStepsPerInterval$steps),"times"]
as.character(format(maxInterval, "%H:%M"))
maxInterval=avgStepsPerInterval[avgStepsPerInterval$avgSteps==max(avgStepsPerInterval$avgSteps),"times"]
as.character(format(maxInterval, "%H:%M"))
#calculate the number of missing measurements
length(fit$steps[is.na(fit$steps)])
#create a new data set that replaces NA with average for that interval
fit2=merge(fit,avgStepsPerInterval[,c("interval","avgSteps")],all.x=T)
fit2$steps=ifelse(is.na(fit2$steps),fit2$avgSteps,fit2$steps)
totalStepsPerDay2=fit2 %>%
group_by(date) %>%
summarise(steps=sum(steps))
h <- ggplot(totalStepsPerDay2, aes(x=steps),binwidth = 20)
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
mean(totalStepsPerDay2$steps)
median(totalStepsPerDay2$steps)
head(fit2)
fit2$dayofweek=weekdays(fit2$date)
fit2$dayofweek=weekdays(fit2$date)
weekdays(fit2$date)
fit2$dayofweek=weekdays(as.Date(fit2$date))
fit2=merge(fit,avgStepsPerInterval[,c("interval","avgSteps")],all.x=T)
fit2$steps=ifelse(is.na(fit2$steps),fit2$avgSteps,fit2$steps)
totalStepsPerDay2=fit2 %>%
group_by(date) %>%
summarise(steps=sum(steps))
h <- ggplot(totalStepsPerDay2, aes(x=steps),binwidth = 20)
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
mean(totalStepsPerDay2$steps)
median(totalStepsPerDay2$steps)
fit2$dayOfWeek=weekdays(as.Date(fit2$date))
head(fit2)
unique(fit2$dayOfWeek)
fit2$dayOfWeek=ifelse(fit2$dayOfWeek=="Saturday" | fit2$dayOfWeek=="Sunday","weekend","weekday")
head(fit2)
avgStepsPerInterval2=fit2 %>%
group_by(interval,dayOfWeek) %>%
summarise(avgSteps=mean(steps))
avgStepsPerInterval2
head(avgStepsPerInterval2,500)
ggplot(data=avgStepsPerInterval2, aes(x=times, y=avgSteps)) + geom_line() +
scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Average Steps at Times Throughout the Day") +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))+ facet_wrap(~dayOfWeek)
avgStepsPerInterval2
avgStepsPerInterval2=fit2 %>%
group_by(interval,dayOfWeek) %>%
summarise(avgSteps=mean(steps))
avgStepsPerInterval2
head(fit2)
fit2=merge(fit,avgStepsPerInterval[,c("interval","avgSteps")],all.x=T)
fit2$steps=ifelse(is.na(fit2$steps),fit2$avgSteps,fit2$steps)
fit2$dayOfWeek=weekdays(as.Date(fit2$date))
fit2$dayOfWeek=ifelse(fit2$dayOfWeek=="Saturday" | fit2$dayOfWeek=="Sunday","weekend","weekday")
fit2
head(fit2)
fit2=merge(fit,avgStepsPerInterval[,c("interval","avgSteps")],all.x=T)
fit2$steps=ifelse(is.na(fit2$steps),fit2$avgSteps,fit2$steps)
head(fit2)
fit=read.csv("activity.csv",stringsAsFactors=F)
#remove NAs
fitDeleteNA=fit[!is.na(fit$steps),]
totalStepsPerDay=fitDeleteNA %>%
group_by(date) %>%
summarise(steps=sum(steps))
h <- ggplot(totalStepsPerDay, aes(x=steps))
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
avgSteps=mean(totalStepsPerDay$steps)
medianSteps=median(totalStepsPerDay$steps)
avgStepsPerInterval=fitDeleteNA %>%
group_by(interval) %>%
summarise(avgSteps=mean(steps))
avgStepsPerInterval$times=seq(as.POSIXct("00:00", format = "%H:%M"), length = 288, by = 300)
ggplot(data=avgStepsPerInterval, aes(x=times, y=avgSteps)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +  labs(title = "Average Steps at Times Throughout the Day") + theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
#with base plot
#plot(avgStepsPerInterval$times,avgStepsPerInterval$steps,type="l",xlab="Time Interval",ylab="Avg Steps")
maxInterval=avgStepsPerInterval[avgStepsPerInterval$avgSteps==max(avgStepsPerInterval$avgSteps),"times"]
as.character(format(maxInterval, "%H:%M"))
#calculate the number of missing measurements
length(fit$steps[is.na(fit$steps)])
#create a new data set that replaces NA with average for that interval
fit2=merge(fit,avgStepsPerInterval[,c("interval","avgSteps")],all.x=T)
fit2$steps=ifelse(is.na(fit2$steps),fit2$avgSteps,fit2$steps)
head(fit2)
head(fit)
setwd("/Users/patm12/documents/git/RepData_PeerAssessment1")
fit=read.csv("activity.csv",stringsAsFactors=F)
#remove NAs
fitDeleteNA=fit[!is.na(fit$steps),]
totalStepsPerDay=fitDeleteNA %>%
group_by(date) %>%
summarise(steps=sum(steps))
h <- ggplot(totalStepsPerDay, aes(x=steps))
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
avgSteps=mean(totalStepsPerDay$steps)
medianSteps=median(totalStepsPerDay$steps)
avgStepsPerInterval=fitDeleteNA %>%
group_by(interval) %>%
summarise(avgSteps=mean(steps))
avgStepsPerInterval$times=seq(as.POSIXct("00:00", format = "%H:%M"), length = 288, by = 300)
ggplot(data=avgStepsPerInterval, aes(x=times, y=avgSteps)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +  labs(title = "Average Steps at Times Throughout the Day") + theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
maxInterval=avgStepsPerInterval[avgStepsPerInterval$avgSteps==max(avgStepsPerInterval$avgSteps),"times"]
as.character(format(maxInterval, "%H:%M"))
#calculate the number of missing measurements
length(fit$steps[is.na(fit$steps)])
head(fit)
fit2=merge(fit,avgStepsPerInterval[,c("interval","avgSteps")],all.x=T)
head(fit2)
totalStepsPerDay2=fit2 %>%
group_by(date) %>%
summarise(steps=sum(steps))
h <- ggplot(totalStepsPerDay2, aes(x=steps),binwidth = 20)
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
mean(totalStepsPerDay2$steps)
median(totalStepsPerDay2$steps)
setwd("/Users/patm12/documents/git/RepData_PeerAssessment1")
fit=read.csv("activity.csv",stringsAsFactors=F)
#remove NAs
fitDeleteNA=fit[!is.na(fit$steps),]
totalStepsPerDay=fitDeleteNA %>%
group_by(date) %>%
summarise(steps=sum(steps))
h <- ggplot(totalStepsPerDay, aes(x=steps))
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
avgSteps=mean(totalStepsPerDay$steps)
medianSteps=median(totalStepsPerDay$steps)
avgSteps=mean(totalStepsPerDay$steps)
avgSteps
medianSteps=median(totalStepsPerDay$steps)
medianSteps
avgStepsPerInterval=fitDeleteNA %>%
group_by(interval) %>%
summarise(avgSteps=mean(steps))
avgStepsPerInterval$times=seq(as.POSIXct("00:00", format = "%H:%M"), length = 288, by = 300)
ggplot(data=avgStepsPerInterval, aes(x=times, y=avgSteps)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +  labs(title = "Average Steps at Times Throughout the Day") + theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
#with base plot
#plot(avgStepsPerInterval$times,avgStepsPerInterval$steps,type="l",xlab="Time Interval",ylab="Avg Steps")
maxInterval=avgStepsPerInterval[avgStepsPerInterval$avgSteps==max(avgStepsPerInterval$avgSteps),"times"]
as.character(format(maxInterval, "%H:%M"))
#calculate the number of missing measurements
length(fit$steps[is.na(fit$steps)])
#create a new data set that replaces NA with average for that interval
fit2=merge(fit,avgStepsPerInterval[,c("interval","avgSteps")],all.x=T)
fit2$steps=ifelse(is.na(fit2$steps),fit2$avgSteps,fit2$steps)
totalStepsPerDay2=fit2 %>%
group_by(date) %>%
summarise(steps=sum(steps))
h <- ggplot(totalStepsPerDay2, aes(x=steps),binwidth = 20)
h + geom_histogram(aes(fill = ..count..)) +
labs(title = "Total Steps Per Day") + geom_density() +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
mean(totalStepsPerDay2$steps)
median(totalStepsPerDay2$steps)
fit2$dayOfWeek=weekdays(as.Date(fit2$date))
fit2$dayOfWeek=ifelse(fit2$dayOfWeek=="Saturday" | fit2$dayOfWeek=="Sunday","weekend","weekday")
avgStepsPerInterval2=fit2 %>%
group_by(interval,dayOfWeek) %>%
summarise(avgSteps=mean(steps))
avgStepsPerInterval2
avgStepsPerInterval2[1:100,]
avgStepsPerInterval2[1:400,]
avgStepsPerInterval2[1:200,]
dim(avgStepsPerInterval2)
avgStepsPerInterval2[1:200,]
avgStepsPerInterval2[1:100,]
ggplot(data=avgStepsPerInterval2, aes(x=times, y=avgSteps)) + geom_line() +
scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Average Steps at Times Throughout the Day") +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue")) + facet_wrap(~dayOfWeek)
ggplot(data=avgStepsPerInterval2, aes(x=times, y=avgSteps)) + facet_wrap(~dayOfWeek) + geom_line() +
scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Average Steps at Times Throughout the Day") +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
ggplot(data=avgStepsPerInterval2, aes(x=times, y=avgSteps),facet_wrap(~dayOfWeek))  + geom_line() +
scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Average Steps at Times Throughout the Day") +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
avgStepsPerInterval2
ggplot(data=avgStepsPerInterval2, aes(x=times, y=avgSteps)) + facet_wrap(~dayOfWeek) + geom_line()
head(mpg)
ggplot(data=avgStepsPerInterval2, aes(x=times, y=avgSteps)) + facet_wrap(~dayOfWeek) + geom_point()
ggplot(data=avgStepsPerInterval2, aes(x=times, y=avgSteps)) + facet_grid(~dayOfWeek) + geom_line()
avgStepsPerInterval2=fit2 %>%
group_by(interval) %>%
summarise(avgSteps=mean(steps))
ggplot(data=avgStepsPerInterval2, aes(x=times, y=avgSteps)) + geom_line() +
scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Average Steps at Times Throughout the Day") +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
avgStepsPerInterval2=fit2 %>%
group_by(interval,dayOfWeek) %>%
summarise(avgSteps=mean(steps))
str(avgStepsPerInterval2)
ggplot(data=avgStepsPerInterval2, aes(x=times, y=avgSteps)) + facet_wrap(~dayOfWeek) + geom_line() +
scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Average Steps at Times Throughout the Day") +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
avgStepsPerInterval
ggplot(data=avgStepsPerInterval2, aes(x=times, y=avgSteps)) + facet_wrap(~dayOfWeek)
geom_point()
geom_point()ggplot(data=avgStepsPerInterval2, aes(x=times, y=avgSteps)) + facet_wrap(~dayOfWeek) + geom_line()
ggplot(data=avgStepsPerInterval2, aes(x=times, y=avgSteps)) + facet_wrap(~dayOfWeek) + geom_line()
ggplot(data=avgStepsPerInterval2, aes(x=interval, y=avgSteps)) + facet_wrap(~dayOfWeek) + geom_line() +
scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Average Steps at Times Throughout the Day") +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
ggplot(data=avgStepsPerInterval2, aes(x=interval, y=avgSteps)) + facet_wrap(~dayOfWeek) + geom_line()
head(fit2)
ggplot(data=avgStepsPerInterval2, aes(x=interval, y=avgSteps)) + facet_wrap(~dayOfWeek) + geom_line() +
#scale_x_datetime(breaks = date_breaks("2 hours"),labels=date_format("%H:%M")) +
#theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Average Steps at Times Throughout the Day") +
theme(plot.title = element_text(size = rel(1.7), colour = "dark blue"))
